import React, { useState } from "react";
import RoomCard from "./RoomCard";
import FilterButton from "./FilterButton";

const RoomSection = ({ stayDetails, onRoomQuantityChange, checkIn,
  checkOut,}) => {
  const [activeFilter, setActiveFilter] = useState("All rooms");
  const [showMore, setShowMore] = useState(false);
  const [roomCountToShow] = useState(4);

  // Grab the rooms array from stayDetails
  const rooms = Array.isArray(stayDetails?.room) ? stayDetails.room : [];

  // Filter by the activeFilter against roomdetail.suggestions
  const filteredRooms =
    activeFilter === "All rooms"
      ? rooms
      : rooms.filter((room) =>
          room.roomdetail?.suggestions?.some((s) => {
            const nameMatch = s.name?.toLowerCase().includes(activeFilter.toLowerCase());
            const textMatch = s.suggestion
              ?.toLowerCase()
              .includes(activeFilter.toLowerCase());
            return nameMatch || textMatch;
          })
        );

  // Control how many rooms to show initially
  const roomsToDisplay = showMore
    ? filteredRooms
    : filteredRooms.slice(0, roomCountToShow);
  const filters = [
    {
      label: "All rooms",
      icon: (
        <svg
          className="w-[15px] h-[16px] sm:w-[20px] sm:h-[16px] lg:w-[26px] lg:h-[21px]"
          width="26"
          height="21"
          viewBox="0 0 26 21"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M18.9681 7.00262H21.0319V4.93879H18.9681V7.00262ZM18.9681 11.6693H21.0319V9.60545H18.9681V11.6693ZM18.9681 16.336H21.0319V14.2721H18.9681V16.336ZM18.25 20.554V18.804H23.5V2.4707H12.641V4.564L10.891 3.29875V0.720703H25.25V20.554H18.25ZM0.75 20.554V9.76237L8.33333 4.35545L15.9167 9.76237V20.554H9.65721V15.0124H7.00946V20.554H0.75ZM2.5 18.804H5.25975V13.2624H11.4069V18.804H14.1667V10.6374L8.33333 6.51816L2.5 10.6374V18.804Z"
            fill="white"
          />
        </svg>
      ),
    },
    {
      label: "Special Occasion",
      icon: (
        <svg
          className="w-[12px] h-[20px] sm:w-[20px] sm:h-[28px]"
          width="20"
          height="29"
          viewBox="0 0 20 29"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M14.0009 3.16582C13.8343 3.15147 13.6672 3.14426 13.5 3.14422C12.7097 3.14422 11.9431 3.3015 11.2187 3.61202C11.335 3.30724 11.2812 2.95905 11.0685 2.70699C9.91341 1.32859 8.24167 0.538086 6.48193 0.538086C6.23163 0.538086 5.97914 0.554547 5.73129 0.587141C2.4385 1.02606 0.107395 4.15594 0.534942 7.56412C0.81866 9.82036 1.89365 11.9769 3.562 13.6363C4.25287 14.3233 5.03857 14.9055 5.77969 15.2804C5.65096 15.5897 5.60781 15.8718 5.64795 16.1412C5.71953 16.6356 5.98668 16.8847 6.19789 17.0064C6.35632 17.099 6.53214 17.1482 6.72097 17.1526C6.83264 17.8078 7.10969 18.4071 7.54495 18.9344C8.22936 19.7658 8.47961 21.3751 8.19825 23.1339C7.99907 24.3687 8.0863 25.3973 8.49952 26.6848L8.6235 27.0571C8.75639 27.4501 8.80544 27.6101 8.81589 27.7259C8.8604 28.189 9.24021 28.5381 9.69942 28.5381C9.74404 28.5381 9.74574 28.538 9.78839 28.5335C10.1983 28.4929 10.5321 28.1642 10.5819 27.753C10.6975 26.9132 11.0326 26.3177 12.2114 24.8565C12.4976 24.4995 12.6136 24.3519 12.7504 24.1701C12.9546 23.9037 13.1268 23.6575 13.2771 23.4172C13.7871 22.5902 13.9758 21.3562 13.8379 19.749C13.9827 19.7247 14.1211 19.6711 14.2444 19.5914C14.5386 19.4007 14.7158 19.0937 14.7573 18.7033C14.7848 18.4313 14.7294 18.151 14.5881 17.8476C15.31 17.4395 16.0694 16.8217 16.7317 16.103C18.3273 14.3681 19.3083 12.1653 19.4939 9.90059C19.7736 6.47436 17.3095 3.45326 14.0009 3.16582ZM17.7209 9.75309C17.5651 11.6468 16.7734 13.4192 15.4315 14.8787C14.404 15.9924 13.2999 16.5856 12.9012 16.5858C12.5808 16.5583 11.5645 15.8254 10.6794 14.4627C9.59267 12.7917 9.09999 10.9069 9.25448 9.01224C9.44135 6.73183 11.3032 4.94552 13.4932 4.94552C13.62 4.94552 13.7359 4.95049 13.8477 4.96066C16.1833 5.16459 17.9208 7.31447 17.7209 9.75309ZM7.48206 8.86059C7.34725 10.5193 7.63551 12.2273 8.3161 13.8096C8.08718 13.729 7.81385 13.7475 7.60002 13.8623C7.46915 13.9326 7.41157 13.9416 7.37143 13.9444C6.90948 13.9444 5.79872 13.3354 4.80986 12.3514C3.40456 10.9567 2.537 9.22284 2.30102 7.33733C1.99461 4.90844 3.63758 2.68134 5.96339 2.37274C6.14093 2.34938 6.31981 2.33754 6.49889 2.3373C7.72383 2.3373 8.89469 2.89654 9.71123 3.87173C9.83797 4.02219 10.0109 4.12653 10.2031 4.16852C8.65122 5.22442 7.63754 6.96748 7.48206 8.86059ZM9.34794 16.5878C9.48839 16.4472 9.58785 16.2709 9.63565 16.0779C10.0699 16.6478 10.5476 17.15 11.0245 17.5379C10.8346 17.8123 10.7344 18.0811 10.7185 18.3579C10.697 18.7463 10.8207 19.0767 11.0763 19.3135C11.3064 19.5242 11.5256 19.6101 11.833 19.6101C11.8945 19.6101 11.9598 19.6067 12.0313 19.5998C12.1719 20.9005 12.074 21.9668 11.7678 22.4593C11.5556 22.8027 11.3475 23.0743 10.8301 23.7162C10.4596 24.1772 10.1576 24.563 9.91297 24.9135C9.85478 24.4279 9.86758 23.9491 9.95196 23.4193C10.3203 21.1248 9.93053 19.0167 8.90935 17.78C8.70274 17.5298 8.56093 17.2403 8.48738 16.9187C8.84689 16.9175 9.12848 16.8092 9.34794 16.5878Z"
            fill="#A1A1A1"
          />
        </svg>
      ),
    },
    {
      label: "Infant",
      icon: (
        <svg
          className="w-[15px] h-[16px] sm:w-[28px] sm:h-[22px]"
          width="29"
          height="23"
          viewBox="0 0 29 23"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M24.8753 7.05601C23.4827 3.51505 20.2231 0.931719 16.3721 0.306258C16.2652 0.266828 16.1686 0.246484 16.0681 0.241344L15.946 0.238828C15.4144 0.169484 14.9323 0.135742 14.4707 0.135742C9.85027 0.135742 5.69719 2.90807 4.06482 7.05601C2.06364 7.19278 0.470703 8.84719 0.470703 10.8426C0.470703 12.8374 2.06364 14.493 4.06482 14.6292C5.2692 17.6834 7.90952 20.0694 11.1844 21.0569C11.8584 22.2227 13.1048 22.9404 14.4707 22.9404C15.8366 22.9404 17.083 22.2227 17.7557 21.057C21.0306 20.0695 23.6709 17.6834 24.8753 14.6292C26.8771 14.493 28.4707 12.8374 28.4707 10.8426C28.4707 8.84719 26.8771 7.19284 24.8753 7.05601ZM18.2531 16.3001C18.2531 14.871 16.5921 13.7523 14.4714 13.7523C12.3512 13.7523 10.6909 14.871 10.6909 16.3001C10.6909 16.7277 10.8403 17.1399 11.1246 17.5065C10.9109 17.9074 10.7736 18.3439 10.7195 18.8122C8.30819 17.761 6.44947 15.7453 5.70227 13.3426L5.45366 12.5421L4.61301 12.6656C4.50429 12.6821 4.41526 12.6885 4.33323 12.6885C3.29225 12.6885 2.44525 11.8607 2.44525 10.8426C2.44525 9.82456 3.29225 8.9961 4.33388 8.9961C4.41591 8.9961 4.5062 9.00436 4.61498 9.01962L5.45306 9.14053L5.70173 8.34138C6.39609 6.10734 8.00369 4.24108 10.1613 3.13393C10.0372 4.29582 10.7539 5.54483 11.9749 6.10795C12.7055 6.4452 13.6066 6.63863 14.4466 6.63863C15.8317 6.63863 16.9317 6.14234 17.5447 5.24071C18.1234 4.38999 17.6871 3.32802 16.9559 2.71912C16.7092 2.51421 16.4256 2.35201 16.1178 2.23618C19.4893 2.8343 22.2631 5.19877 23.2398 8.34144L23.4879 9.14059L24.3259 9.01967C24.4366 9.00441 24.5243 8.99616 24.6083 8.99616C25.6499 8.99616 26.4969 9.82462 26.4969 10.8427C26.4969 11.8608 25.6499 12.6885 24.6083 12.6885C24.5256 12.6885 24.4379 12.6822 24.3285 12.6656L23.4879 12.5422L23.2411 13.3427C22.4946 15.7427 20.6378 17.7585 18.2289 18.8097C18.1748 18.3534 18.0354 17.9114 17.8181 17.5066C18.103 17.1387 18.2531 16.7264 18.2531 16.3001ZM13.0304 3.42602C13.1398 4.00756 13.7 4.34482 14.2501 4.12722C14.7842 3.92039 15.1918 3.93248 15.6293 4.16796C15.7362 4.22587 15.7756 4.26848 15.7883 4.27105C15.7502 4.3417 15.5365 4.50391 15.2262 4.59108C14.9845 4.65916 14.6996 4.69482 14.4014 4.69482C13.5907 4.69482 12.7716 4.43522 12.3144 4.03245C12.0562 3.80462 12.0556 3.62776 12.0785 3.51516C12.1573 3.11681 12.7538 2.66187 13.2619 2.48752C13.2886 2.47861 13.3153 2.46975 13.3427 2.46078C13.052 2.71781 12.9693 3.10084 13.0304 3.42602ZM15.0513 20.8877C14.6329 21.0278 14.3098 21.0252 13.8907 20.8877C13.3025 20.6905 12.8517 20.2057 12.7143 19.6202C12.6806 19.4764 12.6641 19.3466 12.6641 19.2257C12.6641 18.9241 12.7467 18.6314 12.9108 18.3541C13.1601 17.9302 13.5772 17.6236 14.0561 17.5117C14.203 17.4773 14.339 17.4607 14.4707 17.4607C14.6024 17.4607 14.7378 17.4773 14.8853 17.5117C15.3623 17.6236 15.7794 17.9302 16.0286 18.3541C16.194 18.6328 16.2766 18.9268 16.2766 19.2257C16.2766 19.3479 16.2601 19.4764 16.227 19.6202C16.0884 20.2057 15.6382 20.6905 15.0513 20.8877Z"
            fill="#A1A1A1"
          />
        </svg>
      ),
    },
    {
      label: "Alcohol",
      icon: (
        <svg
          className="w-[10px] h-[18px] sm:w-[14px] sm:h-[28px]"
          width="14"
          height="29"
          viewBox="0 0 14 29"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M9.38683 18.1693C11.804 16.5697 13.4392 13.9919 13.874 11.0962C14.0735 9.76589 14.0162 8.42676 13.7031 7.11426L12.4795 1.99343C12.2771 1.13626 11.5237 0.538086 10.6461 0.538086H3.33298C2.45869 0.538086 1.70602 1.13489 1.50231 1.98867L0.277313 7.11355C-0.0357733 8.42402 -0.0931952 9.76387 0.107125 11.0955C0.541836 13.9919 2.17634 16.5697 4.59352 18.1693L5.10687 18.5098V23.433L2.11547 24.9561C1.3348 25.3498 0.929406 26.2234 1.12836 27.0725C1.32731 27.9351 2.08129 28.5381 2.96247 28.5381H11.0179C11.897 28.5381 12.6504 27.9365 12.8513 27.0779C13.0509 26.229 12.649 25.358 11.8683 24.9575L8.87282 23.433V18.5084L9.38683 18.1693ZM7.84191 15.8342L6.9902 16.3975L6.13779 15.8342C4.38232 14.6721 3.19287 12.7936 2.87568 10.6792C2.72939 9.70508 2.77106 8.72409 3.0008 7.76498L4.05901 3.33803H9.92151L10.9797 7.76498C11.2094 8.72541 11.2518 9.70639 11.1041 10.6798C10.7869 12.7928 9.59743 14.6721 7.84191 15.8342Z"
            fill="#A1A1A1"
          />
        </svg>
      ),
    },
    {
      label: "Senior Citizen",
      icon: (
        <svg
          className="w-[16px] h-[16px] sm:w-[28px] sm:h-[28px]"
          width="29"
          height="29"
          viewBox="0 0 29 29"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M28.1777 6.76032C28.1777 5.0445 26.7817 3.6492 25.0666 3.6492H23.5111C22.8062 3.6492 22.1636 3.89382 21.6411 4.2903C19.9367 2.01771 17.2311 0.538086 14.1777 0.538086C11.1251 0.538086 8.41881 2.01771 6.71442 4.29025C6.19259 3.89377 5.54925 3.64915 4.84444 3.64915H3.28885C1.57303 3.64915 0.177734 5.04445 0.177734 6.76027V9.87138C0.177734 10.6644 0.484586 11.3814 0.975242 11.9313C0.471679 12.6764 0.177734 13.5735 0.177734 14.5381C0.177734 17.1115 2.27106 19.2047 4.84438 19.2047C4.84438 24.3514 9.03104 28.5381 14.1777 28.5381C19.3244 28.5381 23.5111 24.3514 23.5111 19.2047C26.0845 19.2047 28.1777 17.1115 28.1777 14.5381C28.1777 13.5735 27.883 12.6764 27.3802 11.9313C27.8709 11.3814 28.1777 10.6644 28.1777 9.87144V6.76032ZM23.5111 6.76032H25.0666L25.0681 9.87144H23.511L23.5111 6.76032ZM3.28885 6.76032H4.84444L4.84674 9.82736C4.84674 9.8418 4.84444 9.85618 4.84444 9.87138H3.28885V6.76032ZM4.40311 16.0298C3.75977 15.8384 3.28885 15.2422 3.28885 14.5381C3.28885 13.834 3.75977 13.237 4.40311 13.0463C4.6416 13.7861 4.6416 15.29 4.40311 16.0298ZM20.3999 19.2047C20.3999 22.6364 17.6094 25.427 14.1777 25.427C10.7469 25.427 7.9555 22.6364 7.9555 19.2047V9.87144C7.9555 6.44056 10.7469 3.6492 14.1777 3.6492C17.6094 3.6492 20.3999 6.44056 20.3999 9.87144V19.2047ZM23.9531 16.0298C23.7146 15.29 23.7146 13.7861 23.9531 13.0463C24.5957 13.237 25.0666 13.834 25.0666 14.5381C25.0666 15.2422 24.5957 15.8384 23.9531 16.0298Z"
            fill="#A1A1A1"
          />
        </svg>
      ),
    },
    
  ];

  return (
    <div className="bg-white rounded-lg">
      {/* Filter Buttons */}
      <div className="flex flex-wrap space-x-2 gap-y-2 mb-6">
        {filters.map((filter) => (
          <FilterButton
            key={filter.label}
            label={filter.label}
            icon={filter.icon}
            isSelected={activeFilter === filter.label}
            onClick={() => setActiveFilter(filter.label)}
          />
        ))}
      </div>

      {/* Rooms Grid */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        {roomsToDisplay.length > 0 ? (
          roomsToDisplay.map((room) => (
            <RoomCard
              key={room.id}
              room={room}
              destination={stayDetails.destination}
              onQuantityChange={onRoomQuantityChange}
              checkIn={checkIn}
          checkOut={checkOut}
            />
          ))
        ) : (
          <p className="col-span-full text-center">No rooms available</p>
        )}
      </div>

      {/* Show More / See Less */}
      {filteredRooms.length > roomCountToShow && (
        <div className="text-center mt-6">
          <button
            onClick={() => setShowMore((prev) => !prev)}
            className="text-[#DE1587] text-lg flex items-center justify-center mx-auto"
          >
            {showMore ? "See Less" : "See More"}
            <svg
              width="19"
              height="11"
              viewBox="0 0 19 11"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              className="ml-1"
            >
              <path
                d={
                  showMore
                    ? "M16.7324 9.15918L9.4646 1.89136L2.19678 9.15918"
                    : "M1.67383 1.87402L8.94165 9.14184L16.2095 1.87402"
                }
                stroke="#DE1587"
                strokeWidth="2.90713"
                strokeLinecap="round"
                strokeLinejoin="round"
              />
            </svg>
          </button>
        </div>
      )}
    </div>
  );
};

export default RoomSection;
